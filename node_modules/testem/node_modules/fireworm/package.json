{
  "name": "fireworm",
  "version": "0.4.4",
  "description": "A crawling file watcher.",
  "main": "fireworm.js",
  "scripts": {
    "test": "mocha -u tdd tests/*_tests.js"
  },
  "files": [
    "lib",
    "index.js",
    "README.md"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:airportyh/fireworm.git"
  },
  "keywords": [
    "filewatching",
    "utility"
  ],
  "author": {
    "name": "Toby Ho"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.12.0",
    "chai": "~1.3.0",
    "mkdirp": "~0.3.5",
    "rimraf": "~2.2.2",
    "ispy": "~0.1.2"
  },
  "dependencies": {
    "minimatch": "~0.2.9",
    "async": "~0.2.9"
  },
  "readme": "Fireworm\n========\n\nFireworm is a crawling file watcher.\n\nInstall\n-------\n\n    npm install fireworm\n\nUsage\n-----\n\n    var fireworm = require('fireworm')\n\n    // make a new file watcher\n    var fw = fireworm('start_dir')\n\n    // Add the files you want to watch for changes on (can be glob)\n    fw.add('lib/**/*.js')\n    fw.add('tests/**/*.js')\n\n    // ignore some patterns\n    fw.ignore('tests/dontcare/*.js')\n\n    // register for the `change` event\n    fw.on('change', function(filename){\n        console.log(filename + ' just changed!')\n    })\n\nWhy is this different from other file watchers?\n-----------------------------------------------\n\nFireworm works by crawling and re-crawling the relevant directories when necessary. Because of this, it can detect newly created files, new files in newly created directories, re-created files, and even new files within re-created directories too - as long as the file matches the paths you are watching.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/airportyh/fireworm/issues"
  },
  "_id": "fireworm@0.4.4",
  "_from": "fireworm@~0.4.0"
}
