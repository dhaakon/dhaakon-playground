{
  "name": "grunt-xsltproc",
  "description": "Apply XSLT stylesheets to XML documents.",
  "version": "0.3.0",
  "homepage": "https://github.com/andybluntish/grunt-xsltproc",
  "author": {
    "name": "Andy Stanford-Bluntish",
    "email": "andy@bluntish.net",
    "url": "http://andy.bluntish.net"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/andybluntish/grunt-xsltproc.git"
  },
  "bugs": {
    "url": "https://github.com/andybluntish/grunt-xsltproc/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/andybluntish/grunt-xsltproc/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "xslt",
    "xsl",
    "xml",
    "html",
    "transform",
    "compile",
    "preprocessor"
  ],
  "readme": "# grunt-xsltproc\n\n> Apply XSLT stylesheets to XML documents.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-xsltproc --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-xsltproc');\n```\n\n## The \"xsltproc\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `xsltproc` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  xsltproc: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.stylesheet\nType: `String`\n\nPath to the XSLT stylesheet to apply to the files.\n\n#### options.params\nType: `Object`\n\nPass an object of parameter name/value pairs to the stylesheet. Parameters are passed directly to the `xsltproc` call with the `--param` flag.\n\n#### options.stringparams\nType: `Object`\n\nPass an object of string parameter name/value pairs to the stylesheet. Parameters are passed directly to the `xsltproc` call with the `--stringparam` flag.\n\n#### options.xinclude\nType: `Boolean`\n\nProcess the input document using the XInclude specification. More details on this can be found in the [XInclude specification](http://www.w3.org/TR/xinclude/).\n\n### Usage Examples\n\n#### Single file\n\n```js\ngrunt.initConfig({\n  xsltproc: {\n    options: {\n      stylesheet: 'test/fixtures/compiler.xsl'\n    },\n    compile: {\n      files: {\n        'tmp/compile.html': ['test/fixtures/compile.xml']\n      }\n    }\n  }\n})\n```\n\n#### Directory of files\n\n```js\ngrunt.initConfig({\n  xsltproc: {\n    options: {\n      stylesheet: 'test/fixtures/compiler.xsl'\n    },\n    compile: {\n      files: [{\n        expand: true,\n        cwd: 'test/fixtures',\n        src: '*.xml',\n        dest: 'tmp',\n        ext: '.html'\n      }]\n    }\n  }\n})\n```\n\n#### Passing parameters\n\n```js\ngrunt.initConfig({\n  xsltproc: {\n    options: {\n      stylesheet: 'test/fixtures/compiler.xsl',\n      params: {\n        'fav': '/catalogue/album[@id=\"3\"]/title'\n      }\n    },\n    compile: {\n      files: {\n        'tmp/compile.html': ['test/fixtures/compile.xml']\n      }\n    }\n  }\n})\n```\n\n#### Passing string parameters\n\n```js\ngrunt.initConfig({\n  xsltproc: {\n    options: {\n      stylesheet: 'test/fixtures/compiler.xsl',\n      stringparams: {\n        'title': 'My Music'\n      }\n    },\n    compile: {\n      files: {\n        'tmp/compile.html': ['test/fixtures/compile.xml']\n      }\n    }\n  }\n})\n```\n\n#### XInclude\n\nProcess the input document using the XInclude specification.\n\n```js\ngrunt.initConfig({\n  xsltproc: {\n    options: {\n      stylesheet: 'test/fixtures/compiler.xsl',\n      xinclude: true\n    },\n    compile: {\n      files: {\n        'tmp/compile.html': ['test/fixtures/compile.xml']\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n * 2013-11-16   v0.3.0   Enable processing using the XInclude specification.\n * 2013-10-26   v0.2.1   Add documentation for passing in parameters. Update `package.json`.\n * 2013-09-13   v0.2.0   Pass params to the stylesheet via the options object.\n * 2013-09-08   v0.1.0   Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-xsltproc@0.3.0",
  "_from": "grunt-xsltproc@"
}
