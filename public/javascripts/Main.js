// Generated by CoffeeScript 1.6.3
(function() {
  var Main, Map,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    _this = this;

  Map = (function() {
    Map.prototype.svg = null;

    Map.prototype.width = null;

    Map.prototype.height = null;

    Map.prototype.projection = null;

    Map.prototype.projector = d3.geo.equirectangular;

    Map.prototype.type = 'places';

    function Map(src, width, height) {
      this.src = src;
      this.width = width;
      this.height = height;
      this.onDataRead = __bind(this.onDataRead, this);
      this.createSVG();
      this.readJSON();
    }

    Map.prototype.createSVG = function() {
      return this.svg = d3.select('body').append('svg').attr('width', this.width).attr('height', this.height);
    };

    Map.prototype.readJSON = function() {
      return d3.json(this.src, this.onDataRead);
    };

    Map.prototype.onDataRead = function(error, world) {
      this.places = topojson.feature(world, world.objects[this.type]);
      this.projection = this.projector().scale(300).translate([this.width / 2, this.height / 2]);
      return this.svg.append('path').datum(this.places).attr('d', d3.geo.path().projection(this.projection));
    };

    return Map;

  })();

  Main = (function() {
    Main.prototype.JSON_PATH = 'json/world.json';

    Main.prototype.map = null;

    function Main() {
      console.log('Main Started');
      this.createMap();
    }

    Main.prototype.createMap = function() {
      return this.map = new Map(this.JSON_PATH, $(window).width(), $(window).height());
    };

    return Main;

  })();

  $(document).ready((function() {
    return new Main();
  }));

}).call(this);
